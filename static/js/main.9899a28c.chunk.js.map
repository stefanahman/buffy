{"version":3,"sources":["logo.svg","components/InputField.jsx","components/AcidBaseField.jsx","components/AtomMasses.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","InputField","handleChange","e","_this","props","onChange","target","value","nextProps","nextState","this","classes","react_default","a","createElement","TextField_default","id","label","className","textField","type","margin","React","Component","withStyles","theme","container","display","flexWrap","marginLeft","spacing","unit","marginRight","width","paddingBottom","menu","AcidBaseField","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","moleculeAtoms","match","slice","totalMass","i","length","atomParts","parseFloat","state","atomMasses","parseInt","setState","chemicalFormula","molarMass","totalWeight","mole","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","K","Ar","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Form","formControl","aria-describedby","required","Input","htmlFor","Input_default","acid","disabled","endAdornment","position","borderTopColor","borderTopWidth","borderTopStyle","root","withoutLabel","marginTop","App","algebra","c1","c2","hendersonHasselbalch","diff","ph","pka","pot","Math","pow","concentration","_this2","data","acidMole","baseMole","src","logo","alt","components_InputField","components_AcidBaseField","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4QCsBlCC,6MACJC,aAAe,SAAAC,GACbC,EAAKC,MAAMC,SAASH,EAAEI,OAAOC,6FAGTC,EAAWC,GAC/B,OAAIC,KAAKN,MAAMG,QAAUC,EAAUD,uCAM5B,IACCI,EAAYD,KAAKN,MAAjBO,QAER,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,GAAIN,KAAKN,MAAMY,IAAM,KACrBC,MAAOP,KAAKN,MAAMa,MAClBC,UAAWP,EAAQQ,UACnBZ,MAAOG,KAAKN,MAAMG,MAClBF,SAAUK,KAAKT,aACfmB,KAAMV,KAAKN,MAAMgB,MAAQ,SACzBC,OAAQX,KAAKN,MAAMiB,QAAU,kBAvBZC,IAAMC,WAiChBC,uBAlDA,SAAAC,GAAK,MAAK,CACvBC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZT,UAAW,CACTU,WAAYJ,EAAMK,QAAQC,KAC1BC,YAAaP,EAAMK,QAAQC,KAC3BE,MAAO,IACPC,cAAe,IAEjBC,KAAM,CACJF,MAAO,OAsCIT,CAAmBxB,4BC/ClC,IAqBMoC,cACJ,SAAAA,EAAYhC,GAAO,IAAAD,EAAA,OAAAkC,OAAAC,EAAA,EAAAD,CAAA3B,KAAA0B,IACjBjC,EAAAkC,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/B,KAAMN,KAmBRH,aAAe,SAACC,GAId,IAHA,IAAIwC,EAAgBxC,EAAEI,OAAOC,MAAMoC,MAAM,oBAAoBC,MAAM,GAAG,GAClEC,EAAY,EAEPC,EAAI,EAAGA,EAAIJ,EAAcK,OAAQD,IAAK,CAC7C,IAAIE,EAAYN,EAAcI,GAAGH,MAAM,qBAKvCE,GAHWI,WAAW9C,EAAK+C,MAAMC,WAAWH,EAAU,MACzCI,SAASJ,EAAU,GAAI,IAAM,GAK5C7C,EAAKkD,SAAS,CACZC,gBAAiBpD,EAAEI,OAAOC,MAC1BgD,UAAWV,KAnCI1C,EAuCnBqD,YAAc,WACZ,OAAOP,WAAW9C,EAAK+C,MAAMK,WAAa,GAAKN,WAAW9C,EAAKC,MAAMqD,OAtCrEtD,EAAK+C,MAAQ,CACXC,WChCG,CACLO,EAAG,UACHC,GAAI,WACJC,GAAI,QACJC,GAAI,WACJC,EAAG,SACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,aACHC,GAAI,UACJC,GAAI,cACJC,GAAI,UACJC,GAAI,aACJC,GAAI,UACJC,EAAG,YACHC,EAAG,SACHC,GAAI,SACJC,EAAG,UACHC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,EAAG,UACHC,GAAI,UACJC,GAAI,YACJC,GAAI,SACJC,GAAI,YACJC,GAAI,UACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJC,GAAI,UACJC,GAAI,QACJC,EAAG,WACHC,GAAI,SACJC,GAAI,SACJC,GAAI,QACJC,GAAI,KACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,EAAG,UACHC,GAAI,UACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,MACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,YACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,YACJC,EAAG,SACHC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,UACJC,GAAI,aACJC,GAAI,SACJC,GAAI,WACJC,GAAI,QACJC,GAAI,aDlDFtF,gBAAiB,GACjBG,KAAM,EACNF,UAAW,GANIpD,qFAUGK,EAAWC,GAC/B,OAAIC,KAAKN,MAAMqD,OAASjD,EAAUiD,MAG9B/C,KAAKwC,MAAMI,kBAAoB7C,EAAU6C,iDA6BtC,IACC3C,EAAYD,KAAKN,MAAjBO,QAER,OACEC,EAAAC,EAAAC,cAAA,OAAKI,UAAWP,EAAQe,WACtBd,EAAAC,EAAAC,cAAC+H,EAAA,YAAD,CAAa3H,UAAWP,EAAQmI,YAAaC,mBAAiB,+BAA+BC,UAAQ,GACnGpI,EAAAC,EAAAC,cAACmI,EAAA,WAAD,CAAYC,QAAQ,mBAAmBxI,KAAKN,MAAMa,OAClDL,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CACEG,GAAG,kBACHT,MAAOG,KAAKwC,MAAMkG,KAClB/I,SAAUK,KAAKT,eAEjBW,EAAAC,EAAAC,cAAC+H,EAAA,eAAD,CAAgB7H,GAAG,gCAAnB,qBAEFJ,EAAAC,EAAAC,cAAC+H,EAAA,YAAD,CAAa3H,UAAWP,EAAQmI,YAAaC,mBAAiB,yBAAyBM,UAAQ,GAC7FzI,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CACEN,MAAOG,KAAKwC,MAAMK,UAClB+F,aAAc1I,EAAAC,EAAAC,cAACmI,EAAA,eAAD,CAAgBM,SAAS,OAAzB,eAEhB3I,EAAAC,EAAAC,cAAC+H,EAAA,eAAD,CAAgB7H,GAAG,0BAAnB,eAEFJ,EAAAC,EAAAC,cAAC+H,EAAA,YAAD,CAAa3H,UAAWP,EAAQmI,YAAaC,mBAAiB,8BAA8BM,UAAQ,GAClGzI,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CACEN,MAAOG,KAAKN,MAAMqD,KAClB6F,aAAc1I,EAAAC,EAAAC,cAACmI,EAAA,eAAD,CAAgBM,SAAS,OAAzB,UAEhB3I,EAAAC,EAAAC,cAAC+H,EAAA,eAAD,CAAgB7H,GAAG,+BAAnB,mCAEFJ,EAAAC,EAAAC,cAAC+H,EAAA,YAAD,CAAa3H,UAAWP,EAAQmI,YAAaC,mBAAiB,8BAA8BM,UAAQ,GAClGzI,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CACEN,MAAOG,KAAK8C,cACZ8F,aAAc1I,EAAAC,EAAAC,cAACmI,EAAA,eAAD,CAAgBM,SAAS,OAAzB,UAEhB3I,EAAAC,EAAAC,cAAC+H,EAAA,eAAD,CAAgB7H,GAAG,+BAAnB,yBA7EkBM,IAAMC,WAwFnBC,uBA7GA,SAAAC,GAAK,MAAK,CACvBC,UAAW,CACT8H,eAAgB,OAChBC,eAAgB,EAChBC,eAAgB,SAChBxH,cAAe,IAEjByH,KAAM,CACJhI,QAAS,OACTC,SAAU,QAEZkH,YAAa,CACXzH,OAAQI,EAAMK,QAAQC,KACtBE,MAAO,KAET2H,aAAc,CACZC,UAAgC,EAArBpI,EAAMK,QAAQC,QA6FdP,CAAmBY,qBEzDnB0H,qNArDb5G,MAAQ,KAER6G,QAAU,SAACC,EAAIC,GAsBb,MAAO,CAFIA,GAAMD,GAAM,EAAEC,IACdD,GAAM,EAAEC,OAIrBC,qBAAuB,WACrB,IAAIC,EAAOlH,WAAW9C,EAAK+C,MAAMkH,IAAMnH,WAAW9C,EAAK+C,MAAMmH,KACzDC,EAAMC,KAAKC,IAAI,GAAIL,GACvB,OAAOhK,EAAK4J,QAAQ5J,EAAK+C,MAAMuH,cAAeH,4EAGvC,IAAAI,EAAAhK,KACHiK,EAAOjK,KAAKwJ,uBACZU,EAAWD,EAAK,IAAM,EAAGE,EAAWF,EAAK,IAAM,EAEnD,OACE/J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAChBN,EAAAC,EAAAC,cAAA,OAAKgK,IAAKC,IAAM7J,UAAU,WAAW8J,IAAI,SACzCpK,EAAAC,EAAAC,cAAA,MAAII,UAAU,aAAd,sBAEFN,EAAAC,EAAAC,cAACmK,EAAD,CAAYhK,MAAM,KAAKZ,SAAU,SAACsK,GAAD,OAAUD,EAAKrH,SAAS,CAAE+G,GAAIO,OAC/D/J,EAAAC,EAAAC,cAACmK,EAAD,CAAYhK,MAAM,MAAMZ,SAAU,SAACsK,GAAD,OAAUD,EAAKrH,SAAS,CAAEgH,IAAKM,OACjE/J,EAAAC,EAAAC,cAACmK,EAAD,CAAYhK,MAAM,gBAAgBZ,SAAU,SAACsK,GAAD,OAAUD,EAAKrH,SAAS,CAAEoH,cAAeE,OACrF/J,EAAAC,EAAAC,cAACoK,EAAD,CAAezH,KAAMmH,EAAU3J,MAAM,SACrCL,EAAAC,EAAAC,cAACoK,EAAD,CAAezH,KAAMoH,EAAU5J,MAAM,iBAhD3BM,cCIZ4J,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5I,MACvB,2DAsCN,SAAS6I,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9I,QACfwI,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO7L,EAAAC,EAAAC,cAAC4L,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,SAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAwB,OAAMH,SAAN,sBAEP3B,GAiDV,SAAiCM,GAE/ByB,MAAMzB,GACHI,KAAK,SAAAsB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C7B,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BR,OAAOC,SAASoC,aAKpBlC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAsB,CAAwBlC,GAIxBC,UAAUC,cAAc6B,MAAM3B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCzCxBmC","file":"static/js/main.9899a28c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport TextField from 'material-ui/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n    paddingBottom: 15\n  },\n  menu: {\n    width: 200,\n  },\n});\n\n\nclass InputField extends React.Component {\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.value !== nextProps.value) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <TextField\n        id={this.props.id || \"id\"}\n        label={this.props.label}\n        className={classes.textField}\n        value={this.props.value}\n        onChange={this.handleChange}\n        type={this.props.type || \"number\"}\n        margin={this.props.margin || \"normal\"}\n      />\n    );\n  }\n}\n\nInputField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputField);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Input, { InputLabel, InputAdornment } from 'material-ui/Input';\nimport { FormControl, FormHelperText } from 'material-ui/Form';\n\nimport AtomMasses from './AtomMasses';\n\nconst styles = theme => ({\n  container: {\n    borderTopColor: 'gray',\n    borderTopWidth: 1,\n    borderTopStyle: 'dotted',\n    paddingBottom: 15\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    width: 300,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\n\nclass AcidBaseField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      atomMasses: AtomMasses(),\n      chemicalFormula: '',\n      mole: 0,\n      molarMass: 0\n    };\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.mole !== nextProps.mole) {\n      return true;\n    }\n    if (this.state.chemicalFormula !== nextState.chemicalFormula) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = (e) => {\n    var moleculeAtoms = e.target.value.match(/([A-Z]?[^A-Z]*)/g).slice(0,-1)\n    var totalMass = 0\n\n    for (var i = 0; i < moleculeAtoms.length; i++) {\n      var atomParts = moleculeAtoms[i].match(/[a-zA-Z]+|[0-9]+/g) // O2 => [O,2]\n\n      var mass = parseFloat(this.state.atomMasses[atomParts[0]])\n      var amount = parseInt(atomParts[1], 0) || 1\n\n      totalMass += mass * amount\n    }\n\n    this.setState({\n      chemicalFormula: e.target.value,\n      molarMass: totalMass\n    });\n  };\n\n  totalWeight = () => {\n    return parseFloat(this.state.molarMass || 0) * parseFloat(this.props.mole)\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl} aria-describedby=\"chemical-formula-helper-text\" required>\n          <InputLabel htmlFor=\"chemicalFormula\">{this.props.label}</InputLabel>\n          <Input\n            id=\"chemicalFormula\"\n            value={this.state.acid}\n            onChange={this.handleChange}\n          />\n          <FormHelperText id=\"chemical-formula-helper-text\">Chemical formula</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} aria-describedby=\"molar-mass-helper-text\" disabled>\n          <Input\n            value={this.state.molarMass}\n            endAdornment={<InputAdornment position=\"end\">gram/mole</InputAdornment>}\n          />\n          <FormHelperText id=\"molar-mass-helper-text\">Molar mass</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} aria-describedby=\"molecule-weight-helper-text\" disabled>\n          <Input\n            value={this.props.mole}\n            endAdornment={<InputAdornment position=\"end\">mole</InputAdornment>}\n          />\n          <FormHelperText id=\"molecule-weight-helper-text\">Calculated mole based on input</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} aria-describedby=\"molecule-weight-helper-text\" disabled>\n          <Input\n            value={this.totalWeight()}\n            endAdornment={<InputAdornment position=\"end\">gram</InputAdornment>}\n          />\n          <FormHelperText id=\"molecule-weight-helper-text\">Total weight</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nAcidBaseField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AcidBaseField);\n","export default function AtomMasses() {\n  return {\n    H: '1.00794',\n    He: '4.002602',\n    Li: '6.941',\n    Be: '9.012182',\n    B: '10.811',\n    C: '12.0107',\n    N: '14.0067',\n    O: '15.9994',\n    F: '18.9984032',\n    Ne: '20.1797',\n    Na: '22.98976928',\n    Mg: '24.3050',\n    Al: '26.9815386',\n    Si: '28.0855',\n    P: '30.973762',\n    S: '32.065',\n    Cl: '35.453',\n    K: '39.0983',\n    Ar: '39.948',\n    Ca: '40.078',\n    Sc: '44.955912',\n    Ti: '47.867',\n    V: '50.9415',\n    Cr: '51.9961',\n    Mn: '54.938045',\n    Fe: '55.845',\n    Co: '58.933195',\n    Ni: '58.6934',\n    Cu: '63.546',\n    Zn: '65.409',\n    Ga: '69.723',\n    Ge: '72.64',\n    As: '74.92160',\n    Se: '78.96',\n    Br: '79.904',\n    Kr: '83.798',\n    Rb: '85.4678',\n    Sr: '87.62',\n    Y: '88.90585',\n    Zr: '91.224',\n    Nb: '92.906',\n    Mo: '95.94',\n    Tc: '98',\n    Ru: '101.07',\n    Rh: '102.905',\n    Pd: '106.42',\n    Ag: '107.8682',\n    Cd: '112.411',\n    In: '114.818',\n    Sn: '118.710',\n    Sb: '121.760',\n    Te: '127.60',\n    I: '126.904',\n    Xe: '131.293',\n    Cs: '132.9054519',\n    Ba: '137.327',\n    La: '138.90547',\n    Ce: '140.116',\n    Pr: '140.90765',\n    Nd: '144.242',\n    Pm: '145',\n    Sm: '150.36',\n    Eu: '151.964',\n    Gd: '157.25',\n    Tb: '158.92535',\n    Dy: '162.500',\n    Ho: '164.930',\n    Er: '167.259',\n    Tm: '168.93421',\n    Yb: '173.04',\n    Lu: '174.967',\n    Hf: '178.49',\n    Ta: '180.94788',\n    W: '183.84',\n    Re: '186.207',\n    Os: '190.23',\n    Ir: '192.217',\n    Pt: '195.084',\n    Au: '196.966569',\n    Hg: '200.59',\n    Tl: '204.3833',\n    Pb: '207.2',\n    Bi: '208.98040',\n  }\n}\n","import React, { Component } from 'react';\nimport InputField from './components/InputField';\nimport AcidBaseField from './components/AcidBaseField';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {};\n\n  algebra = (c1, c2) => {\n    /*\n      Example:\n      c1 = 0.05\n      c2 = 0.061\n\n      HA + A = 0.05\n      A / HA = 0.061\n\n      A = 0.061 * HA\n      HA + ( 0.061 * HA ) = 0.05\n      1.061 * HA = 0.05\n\n      ** HA = 0.05 / 1.061\n      ** A = 0.061 * (0.05 / 1.061)\n\n      A = c2 * (c1 / (1+c2))\n      HA = c1 / (1+c2)\n    */\n\n    var acid = c2 * (c1 / (1+c2));\n    var base = c1 / (1+c2);\n    return [acid, base];\n  }\n\n  hendersonHasselbalch = () => {\n    var diff = parseFloat(this.state.ph) - parseFloat(this.state.pka)\n    var pot = Math.pow(10, diff)\n    return this.algebra(this.state.concentration, pot)\n  }\n\n  render() {\n    var data = this.hendersonHasselbalch()\n    var acidMole = data[0] || 0, baseMole = data[1] || 0\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to Buffy!</h1>\n        </header>\n        <InputField label=\"pH\" onChange={(data) => this.setState({ ph: data })}/>\n        <InputField label=\"pKa\" onChange={(data) => this.setState({ pka: data })}/>\n        <InputField label=\"Concentration\" onChange={(data) => this.setState({ concentration: data })}/>\n        <AcidBaseField mole={acidMole} label=\"Acid\"/>\n        <AcidBaseField mole={baseMole} label=\"Base\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}